# Generated by Django 5.0.6 on 2024-06-29 07:30

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Artist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Имя")),
                (
                    "lastname",
                    models.CharField(max_length=50, verbose_name="Фамилия"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "мужчина"),
                            ("female", "женщина"),
                            ("other", "другое"),
                        ],
                        max_length=50,
                        verbose_name="Пол",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, null=True, verbose_name="Биография"
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        upload_to="artist_images/", verbose_name="Фото"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Номер телефона должен быть в формате: '+999999999'. Допускается до 15 цифр.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Телефон",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Почта"
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(verbose_name="Дата рождения"),
                ),
                (
                    "city_of_birth",
                    models.CharField(
                        max_length=100, verbose_name="Город рождения"
                    ),
                ),
                (
                    "сity_of_residence",
                    models.CharField(
                        max_length=100, verbose_name="Город проживания"
                    ),
                ),
                (
                    "education",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Образование",
                    ),
                ),
                (
                    "art_education",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Художественное образование",
                    ),
                ),
                (
                    "teaching_experience",
                    models.CharField(
                        choices=[("yes", "да"), ("no", "нет")],
                        max_length=10,
                        verbose_name="Опыт преподавания",
                    ),
                ),
                (
                    "personal_style",
                    models.CharField(
                        choices=[("yes", "да"), ("no", "нет")],
                        max_length=10,
                        verbose_name="Индивидуальный стиль",
                    ),
                ),
                (
                    "collected_by_private_collectors",
                    models.BooleanField(
                        verbose_name="Коллекционеры которые собирали работы художника"
                    ),
                ),
                (
                    "collected_by_major_institutions",
                    models.BooleanField(verbose_name="Крупные учреждения"),
                ),
                (
                    "industry_award",
                    models.TextField(
                        blank=True, null=True, verbose_name="Награды"
                    ),
                ),
                (
                    "social",
                    models.URLField(
                        blank=True, default="", verbose_name="Соц.сети"
                    ),
                ),
                (
                    "create_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="Пароль"),
                ),
            ],
            options={
                "verbose_name": "художник",
                "verbose_name_plural": "художники",
                "ordering": ["-date_of_birth"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_category",
                    models.CharField(
                        max_length=50, verbose_name="Название категории"
                    ),
                ),
            ],
            options={
                "verbose_name": "категория",
                "verbose_name_plural": "категории",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Exhibition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField(verbose_name="Год")),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="Название"),
                ),
                (
                    "place",
                    models.CharField(max_length=100, verbose_name="Место"),
                ),
            ],
            options={
                "verbose_name": "выставка",
                "verbose_name_plural": "выставки",
            },
        ),
        migrations.CreateModel(
            name="Style",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_style",
                    models.CharField(
                        max_length=50, verbose_name="Название стиля"
                    ),
                ),
            ],
            options={
                "verbose_name": "стиль",
                "verbose_name_plural": "стили",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="GroupShow",
            fields=[
                (
                    "exhibition_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.exhibition",
                    ),
                ),
            ],
            options={
                "verbose_name": "групповая выставка",
                "verbose_name_plural": "групповые выставки",
            },
            bases=("products.exhibition",),
        ),
        migrations.CreateModel(
            name="SoloShow",
            fields=[
                (
                    "exhibition_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.exhibition",
                    ),
                ),
            ],
            options={
                "verbose_name": "сольная выставка",
                "verbose_name_plural": "сольные выставки",
            },
            bases=("products.exhibition",),
        ),
        migrations.CreateModel(
            name="ProductCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        upload_to="product_images/", verbose_name="Фото"
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=100, verbose_name="Название"),
                ),
                (
                    "description",
                    models.TextField(max_length=200, verbose_name="Описание"),
                ),
                ("width", models.FloatField(verbose_name="ширина картины")),
                ("heigth", models.FloatField(verbose_name="высота картины")),
                (
                    "genre",
                    models.CharField(max_length=100, verbose_name="Жанр"),
                ),
                (
                    "material_painting",
                    models.CharField(max_length=100, verbose_name="Материал"),
                ),
                (
                    "material_tablet",
                    models.CharField(
                        max_length=100, verbose_name="Материал подложки"
                    ),
                ),
                (
                    "year_create",
                    models.IntegerField(verbose_name="Год создания картины"),
                ),
                (
                    "avg_cost_of_work",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Средняя стоимость работы",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Цена продажи",
                    ),
                ),
                (
                    "desired_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Желаемая цена продажи",
                    ),
                ),
                ("unique", models.BooleanField(verbose_name="уникальность")),
                (
                    "investment_attractiveness",
                    models.BooleanField(
                        verbose_name="инвестиционная привелкательность"
                    ),
                ),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="artworks",
                        to="products.artist",
                        verbose_name="художник",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.category",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "style",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_cards",
                        to="products.style",
                        verbose_name="Стиль",
                    ),
                ),
            ],
            options={
                "verbose_name": "карточка товара",
                "verbose_name_plural": "карточки товаров",
                "ordering": ["-id"],
            },
        ),
        migrations.AddField(
            model_name="artist",
            name="group_shows",
            field=models.ManyToManyField(
                blank=True,
                related_name="artists",
                to="products.groupshow",
                verbose_name="информация о групповых галереях",
            ),
        ),
        migrations.AddField(
            model_name="artist",
            name="solo_shows",
            field=models.ManyToManyField(
                blank=True,
                related_name="artists",
                to="products.soloshow",
                verbose_name="информация о сольных выставках",
            ),
        ),
    ]
