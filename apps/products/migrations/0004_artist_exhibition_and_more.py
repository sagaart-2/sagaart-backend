# Generated by Django 5.0.6 on 2024-06-28 21:35

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("products", "0003_merge_20240628_2128"),
    ]

    operations = [
        migrations.CreateModel(
            name="Artist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Имя")),
                (
                    "lastname",
                    models.CharField(max_length=50, verbose_name="Фамилия"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "мужчина"),
                            ("female", "женщина"),
                            ("other", "другое"),
                        ],
                        max_length=50,
                        verbose_name="Пол",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, null=True, verbose_name="Биография"
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        upload_to="artist_images/", verbose_name="Фото"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Номер телефона должен быть в формате: '+999999999'. Допускается до 15 цифр.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Телефон",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Почта"
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(verbose_name="Дата рождения"),
                ),
                (
                    "city_of_birth",
                    models.CharField(
                        max_length=100, verbose_name="Город рождения"
                    ),
                ),
                (
                    "сity_of_residence",
                    models.CharField(
                        max_length=100, verbose_name="Город проживания"
                    ),
                ),
                (
                    "education",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Образование",
                    ),
                ),
                (
                    "art_education",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Художественное образование",
                    ),
                ),
                (
                    "teaching_experience",
                    models.CharField(
                        choices=[("yes", "да"), ("no", "нет")],
                        max_length=10,
                        verbose_name="Опыт преподавания",
                    ),
                ),
                (
                    "personal_style",
                    models.CharField(
                        choices=[("yes", "да"), ("no", "нет")],
                        max_length=10,
                        verbose_name="Индивидуальный стиль",
                    ),
                ),
                (
                    "collected_by_private_collectors",
                    models.BooleanField(
                        verbose_name="Коллекционеры которые собирали работы художника"
                    ),
                ),
                (
                    "collected_by_major_institutions",
                    models.BooleanField(verbose_name="Крупные учреждения"),
                ),
                (
                    "industry_award",
                    models.TextField(
                        blank=True, null=True, verbose_name="Награды"
                    ),
                ),
                (
                    "social",
                    models.URLField(
                        blank=True, default="", verbose_name="Соц.сети"
                    ),
                ),
                (
                    "create_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="Пароль"),
                ),
            ],
            options={
                "verbose_name": "художник",
                "verbose_name_plural": "художники",
                "ordering": ["-date_of_birth"],
            },
        ),
        migrations.CreateModel(
            name="Exhibition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField(verbose_name="Год")),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="Название"),
                ),
                (
                    "place",
                    models.CharField(max_length=100, verbose_name="Место"),
                ),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.artist",
                        verbose_name="Художник",
                    ),
                ),
            ],
        ),
        migrations.RenameField(
            model_name="productcard",
            old_name="desired_selling_price",
            new_name="desired_price",
        ),
        migrations.RenameField(
            model_name="productcard",
            old_name="heigth_painting",
            new_name="heigth",
        ),
        migrations.RenameField(
            model_name="productcard",
            old_name="foto",
            new_name="photo",
        ),
        migrations.RenameField(
            model_name="productcard",
            old_name="width_painting",
            new_name="width",
        ),
        migrations.RemoveField(
            model_name="productcard",
            name="painting_data_create",
        ),
        migrations.RemoveField(
            model_name="productcard",
            name="type",
        ),
        migrations.AddField(
            model_name="productcard",
            name="category",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to="products.category",
                verbose_name="Категория",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="productcard",
            name="description",
            field=models.TextField(
                default=1, max_length=200, verbose_name="Описание"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="productcard",
            name="investment_attractiveness",
            field=models.BooleanField(
                default=1, verbose_name="инвестиционная привелкательность"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="productcard",
            name="price",
            field=models.DecimalField(
                decimal_places=2,
                default=1,
                max_digits=10,
                verbose_name="Цена продажи",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="productcard",
            name="title",
            field=models.CharField(
                default=1, max_length=100, verbose_name="Название"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="productcard",
            name="unique",
            field=models.BooleanField(default=1, verbose_name="уникальность"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="productcard",
            name="year_create",
            field=models.IntegerField(
                default=1, verbose_name="Год создания картины"
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="productcard",
            name="artist",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="artworks",
                to="products.artist",
                verbose_name="художник",
            ),
        ),
        migrations.CreateModel(
            name="GroupShow",
            fields=[
                (
                    "exhibition_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.exhibition",
                    ),
                ),
            ],
            options={
                "verbose_name": "групповая выставка",
                "verbose_name_plural": "групповые выставки",
            },
            bases=("products.exhibition",),
        ),
        migrations.CreateModel(
            name="SoloShow",
            fields=[
                (
                    "exhibition_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.exhibition",
                    ),
                ),
            ],
            options={
                "verbose_name": "сольная выставка",
                "verbose_name_plural": "сольные выставки",
            },
            bases=("products.exhibition",),
        ),
    ]
