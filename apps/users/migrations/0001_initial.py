# Generated by Django 5.0.6 on 2024-06-24 14:17

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="Введите номер телефона",
                        max_length=16,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_phone_number",
                                message="Номер телефона должен быть в формате '+7 999 999 99 99'.",
                                regex="^\\+7\\s?(\\d{3})\\s?(\\d{3})\\s?(\\d{2})\\s?(\\d{2})$",
                            )
                        ],
                        verbose_name="Номер телефона",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Введите email, не более 254 символа",
                        max_length=254,
                        unique=True,
                        validators=[django.core.validators.EmailValidator],
                        verbose_name="Адрес электронной почты",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="Введите имя, не более 150 символов",
                        max_length=150,
                        verbose_name="Имя",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        help_text="Введите фамилию, не более 150 символов",
                        max_length=150,
                        verbose_name="Фамилия",
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        help_text="Введите отчество, не более 150 символов",
                        max_length=150,
                        verbose_name="Отчество",
                    ),
                ),
                (
                    "user_rights",
                    models.CharField(
                        choices=[
                            ("user", "Пользователь"),
                            ("moderator", "Модератор"),
                            ("admin", "Администратор"),
                        ],
                        default="user",
                        max_length=50,
                        verbose_name="Права пользователя",
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "create_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата cоздания"
                    ),
                ),
                (
                    "favorite_artist",
                    models.ManyToManyField(
                        related_name="users_like",
                        to="products.painter",
                        verbose_name="Любимые художники",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "пользователь",
                "verbose_name_plural": "Пользователи",
                "ordering": ("id",),
            },
        ),
        migrations.AddConstraint(
            model_name="customuser",
            constraint=models.UniqueConstraint(
                fields=("phone", "email"), name="unique_phone_email"
            ),
        ),
    ]
